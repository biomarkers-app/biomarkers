

## Generic base class for all database items
Item
    id                              # unique id, prefix + 12 alphanumeric, max 24 total (eg. crd_bgri02t8dc5d)
    parentId                        # id of item that owns this item (eg. a transaction is owned by a card) 
    type                            # item type, eg. user, store, card, transaction, etc
    createdOn                       # date when item initially created
    updatedOn                       # date when item last touched or updated

    title*                           # item's name (optional)
    description*                    # item's description (optional)
    tags*                           # comma separated tags, eg. categories (optional)

    amount*                         # item's amount in decimal units, eg. 140 ($1.40) (optional)
    currency*                       # currency units, eg. eur, usd, etc. (defaults to user's currency)

    imageUrl*                       # url to publicly viewable image for this item 
    storageUrl*                     # image location in storage

    


    user_id*                    # a user that can 'use' this object (read) but does not own it         

        permissions* [{             # additional users with permissions on this item and its children aside from its owner (optional)
            user_id                 # user_id that we are giving permissions to
            permissions             # space separated permissions granted to user, eg. 'read write'
        }]

    




Brief description of database/ORM models


## Generic base class for all database items
Item
    id                              # unique id, prefix + 12 alphanumeric, max 24 total (eg. crd_bgri02t8dc5d)
    parent_id                       # id of item that owns this item (eg. a transaction is owned by a card) 
    type                            # item type, eg. user, store, card, transaction, etc
    created_at                      # date when item initially created
    updated_at                      # date when item last touched or updated
    attributes                      # dictionary of attributes containing all other fields
        name*                       # item's name (optional)
        description*                # item's description (optional)
        user_id*                    # a user that can 'use' this object (read) but does not own it         

        permissions* [{             # additional users with permissions on this item and its children aside from its owner (optional)
            user_id                 # user_id that we are giving permissions to
            permissions             # space separated permissions granted to user, eg. 'read write'
        }]


## A user profile or identity (can be a customer, operator or both)
User(Item)
    attributes
        name                        # eg. John Doe
        given_name                  # eg. John
        family_name                 # eg. Doe
        email                       # email address (one record per unique email)
        email_verified              # true if email verified by oauth provider
        locale                      # user's locale, eg. it, en
        picture                     # profile image (url)

* Profile picture from Google People:
  https://developers.google.com/people/image-sizing

* Google ID Tokens may contain the following fields:
  https://developers.google.com/identity/protocols/oauth2/openid-connect#an-id-tokens-payload


# A store or store chain with multiple locations
Store(Item)
    attributes

    hostnames [str]                 # list of domains used for this store, eg. dersut.instacard.it, card.dersut.it, etc...

    locations (fk)                  # list of store locations (via parent_id)
    campaigns (fk)                  # list of campaigns (via parent_id)
    cards (fk)                      # list of store cards (via parent_id)
    products (fk)                   # list of products available for purchase (via parent_id)


# A store location 
Location(Item)
    parent_id (base)                # store that owns this shop location
    attributes
        name*                       # location name, eg: Pizzeria Esposito 2 (optional)
        address {}                  # physical address of this store location


# A card issued by a Store for a User
Card(Item)
    parent_id (base)                # store that generated this card and owns it
    attributes
        user_id                     # user that uses this card (if card is assigned, or None)
        location_id*                # store location that generated the card (optional)

    transactions (fk)               # list of transactions belonging to this card (via parent_id)
    balances (dynamic)              # balances are calculated at runtime from list of transactions


# A transaction on a card (eg. adding or removing balance, etc)
Transaction(Item)
    parent_id (base)                # Card that owns this transaction
    attributes
        subtype*                    # transaction type: link (promo redeemed, etc), store (cashier transaction), ecommerce (online purchase), send (to friends), receive (from friends)
        user_id                     # authenticated user that performed this transaction (store operator, or card user himself)
        name*                       # transcation short name or product name, eg. refund (optional)
        description*                # longer description, possibly from product metadata (optional)

        balances* [{                # array of balances that are added to the card with this transaction (optional)
            currency                # for example 10/eur can buy 8/espresso
            unit_amount             # number of items or amount, eg. 8
        }]

        mode*                       # payment, setup or subscription (optional)
        livemode*                   # false for test transactions (optional)

        stripe_event_id*            # stripe event that generated this transaction in case of credit card purchases (optional)
        stripe_session_id*          # id of stripe checkout session (optional)
        stripe_customer_id*         # customer record in stripe, should be one per email (optional)
        stripe_subscription_id*     # transaction related to stripe subscription purchase (optional)

        timestamp                   # timestamp when transaction was generated (iso with fractional time)
        signature                   # cryptographic signature used to lock transaction or blockchain to previous ones


# A marketing campaign (eg. 100 free espressos) or product or subscription for sale
Product(Item)
    parent_id                       # store that owns this product
    attributes  

        name                        # eg. A free coffee for you or 1 month at the pool
        description*                 # eg. Enjoy your free coffee at any of our locations
        terms*                      # terms and legal small text (optional)
        images* []                  # array of product images, ideally square (optional)
        tags*                       # space separated tags for attribution (optional)

        location_id*                # location that can redeem campaign, null for all locations (optional)

        start_at*                   # starting date (optional)
        expire_at*                  # expiration date (optional)

        customer_limit*             # max redemptions per customer, defaults to unlimited
        total_limit*                # total units in offer (eg. 100 espressos), defaults to unlimited

        price_data* {               # the price of this product or subscription (missing for free products/campaigns)
            currency                # currency, eg. eur, usd
            unit_amount             # eg. 750 euro units/cents (7.50â‚¬)
            recurring* {            # subscription information (optional)
                interval            # specifies billing frequency: day, week, month or year
                interval_count      # the number of intervals between subscription billings
            }
        }

        balances* [{                # balances that are added to the card when product is purchased or promotion is redeemed (optional)
            currency                # for example 10/eur can buy 8/espresso
            unit_amount             # number of items or amount, eg. 8
        }]

        viewed*                     # number of times product was viewed
        redeemed*                   # total number of products actually redeemed so far, defaults to 0
        delivered*                  # offers delivered to customers, defaults to 0

    links (fk)                      # List of links that belong to this campaign (via parent_id)

Notes: price_data same as stripe:
https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-line_items-price_data


# A link that can be used to redeem a campaign offer (or, later on, a purchase)
Link (Item)
    id                              # link id used for barcodes, qr codes, etc
    parent_id                       # product or transaction that this links to
    attributes  
        user_id                     # user that created this link
        link_url*                   # shortened link, also available at /id (optional)
        tags*                       # space separated tags for attribution (optional)

        viewed*                     # number of times link was viewed, defaults to 0
        delivered*                  # number of times link was delivered to a card, defaults to 0


# A purchased subscription
Subscription (Item)
    id
    parent_id                       # subscription is owned by store
    attributes  
        name                        # product name used in titles
        description*                # brief description (optional)
        images* []                  # array of product images, ideally square (optional)
        tags*                       # space separated tags for attribution (optional)

        product_id                  # product that was purchased with this subscription

        stripe_subscription_id      # id of stripe subscription, eg. sub_xxx
        stripe                      # full stripe subscription object 
            ...                     # https://stripe.com/docs/api/subscriptions/object


## Operations

Stores
- An admin creates a Store, assigns to User
- Store owner adds store locations
- Store owner adds store operators/rights

Cards
- A store operator creates a Card (empty or template)
- A store operator adds a balance to a card (eg. add 50 euros, add 10 coffees)
- A store operator deducts balance from a card
- A User creates a Card (empty or template)
- A User adds balance to a card via ecommerce

Website (user)
- A user can list cards registered to him (user detail)
- A card can show its balances and transactions (card detail)

Website (operator)
- A store can list all outstanding cards
- Card details can be shown (see above)
- Removing balance from a card
